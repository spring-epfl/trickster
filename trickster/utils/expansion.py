"""
Test data used by pytest to verify the correctness of
the implementation of expansion functions.
"""

import numpy as np

A = np.array([0, 0, 0, 1, 0, 0, 0])

FEAT_IDXS = [
    [3],
    [2, 3, 4],
    [1, 2, 3, 4, 5],
    [0, 1, 2, 3, 4, 5, 6]
]

TEST_DATA_EXPAND_QUANTIZED_INCREMENT = [
    (A, FEAT_IDXS[0], []),
    (A, FEAT_IDXS[1], [[0, 0, 0, 0, 1, 0, 0]]),
    (A, FEAT_IDXS[2], [[0, 0, 0, 0, 1, 0, 0]]),
    (A, FEAT_IDXS[3], [[0, 0, 0, 0, 1, 0, 0]])
]

TEST_DATA_EXPAND_QUANTIZED_DECREMENT = [
    (A, FEAT_IDXS[0], []),
    (A, FEAT_IDXS[1], [[0, 0, 1, 0, 0, 0, 0]]),
    (A, FEAT_IDXS[2], [[0, 0, 1, 0, 0, 0, 0]]),
    (A, FEAT_IDXS[3], [[0, 0, 1, 0, 0, 0, 0]])
]

TEST_DATA_EXPAND_QUANTIZED = [
    (A, FEAT_IDXS[0], []),
    (A, FEAT_IDXS[1], [
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[2], [
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[3], [
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 0, 0]
    ])
]

TEST_DATA_EXPAND_CATEGORICAL = [
    (A, FEAT_IDXS[0], []),
    (A, FEAT_IDXS[1], [
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[2], [
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0, 1, 0],
        [0, 1, 0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[3], [
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0, 0, 0]
    ])
]

TEST_DATA_EXPAND_COLLECTION_SET = [
    (A, FEAT_IDXS[0], []),
    (A, FEAT_IDXS[1], [
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0]
    ]),
    (A, FEAT_IDXS[2], [
        [0, 1, 0, 1, 0, 0, 0],
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 1, 0, 1, 0]
    ]),
    (A, FEAT_IDXS[3], [
        [1, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 1, 0, 0, 0],
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 1, 0, 1, 0],
        [0, 0, 0, 1, 0, 0, 1]
    ])
]

TEST_DATA_EXPAND_COLLECTION_RESET = [
    (A, FEAT_IDXS[0], [
        [0, 0, 0, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[1], [
        [0, 0, 0, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[2], [
        [0, 0, 0, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[3], [
        [0, 0, 0, 0, 0, 0, 0]
    ])
]

TEST_DATA_EXPAND_COLLECTION = [
    (A, FEAT_IDXS[0], [
        [0, 0, 0, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[1], [
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[2], [
        [0, 1, 0, 1, 0, 0, 0],
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 1, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[3], [
        [1, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 1, 0, 0, 0],
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 1, 0, 1, 0],
        [0, 0, 0, 1, 0, 0, 1],
        [0, 0, 0, 0, 0, 0, 0]
    ])
]

TEST_DATA_EXPAND = [
    (A, FEAT_IDXS[0], [
        [0, 0, 0, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[1], [
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 0, 0],
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[2], [
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0, 1, 0],
        [0, 1, 0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0, 0, 0],
        [0, 1, 0, 1, 0, 0, 0],
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 1, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 0]
    ]),
    (A, FEAT_IDXS[3], [
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0, 0, 0],
        [1, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 1, 0, 0, 0],
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 1, 0, 1, 0],
        [0, 0, 0, 1, 0, 0, 1],
        [0, 0, 0, 0, 0, 0, 0]
    ])
]